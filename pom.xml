<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2022 DANS - Data Archiving and Networked Services (info@dans.knaw.nl)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>nl.knaw.dans</groupId>
    <artifactId>dd-parent</artifactId>
    <version>0.23.0</version>
    <name>DANS Data Station Parent POM</name>
    <description>
        Parent POM for DANS Data Station modules
    </description>
    <packaging>pom</packaging>
    <inceptionYear>2022</inceptionYear>
    <scm>
        <developerConnection>scm:git:ssh://github.com/DANS-KNAW/${project.artifactId}</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <properties>
        <dans-provider-name>dans.knaw.nl</dans-provider-name>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <rpm-scriptlets-dir>${project.build.directory}/rpm-scriptlets</rpm-scriptlets-dir>
        <rpm-replace-configuration>true</rpm-replace-configuration>
        <rpm-release />
        <java.version>11</java.version>
        <main-class /> <!-- To be filled in by child project -->

        <!-- Plugin versions -->
        <maven-release-plugin.version>3.0.0-M7</maven-release-plugin.version>
        <maven-compiler-plugin.version>3.10.1</maven-compiler-plugin.version>
        <maven-source-plugin.version>3.2.1</maven-source-plugin.version>
        <maven-jar-plugin.version>3.3.0</maven-jar-plugin.version>
        <maven-surefire-plugin.version>3.0.0-M7</maven-surefire-plugin.version>
        <maven-dependency-plugin.version>3.4.0</maven-dependency-plugin.version>
        <maven-javadoc-plugin.version>3.4.1</maven-javadoc-plugin.version>
        <maven-assembly-plugin.version>3.4.2</maven-assembly-plugin.version>
        <maven-deploy-plugin.version>3.0.0</maven-deploy-plugin.version>
        <maven-lombok-plugin.version>1.18.20.0</maven-lombok-plugin.version>
        <jacoco-maven-plugin.version>0.8.8</jacoco-maven-plugin.version>
        <openapi-generator-maven-plugin.version>6.6.0</openapi-generator-maven-plugin.version>

        <exec-maven-plugin.version>3.1.0</exec-maven-plugin.version>
        <license-maven-plugin.version>4.2.rc3</license-maven-plugin.version>
        <rpm-maven-plugin.version>2.2.0</rpm-maven-plugin.version>
        <dans-nexus-maven-plugin.version>0.4.0</dans-nexus-maven-plugin.version>
        <dans-build-resources-maven-plugin.version>0.6.0</dans-build-resources-maven-plugin.version>


        <!-- Library versions -->
        <!-- DropWizard managed BEGIN -->
        <dropwizard.version>3.0.2</dropwizard.version>

        <!--
        N.B. the following versions must be kept the same as the versions imported by DropWizard. These variables are used
        to import related libraries that are *not* imported by DropWizard. The variable names in dropwizard-dependencies.pom
        are the same, but are not visible here, so they cannot be used directly.
        -->
        <httpclient5.version>5.2.1</httpclient5.version>
        <httpcore5.version>5.2.3</httpcore5.version>
        <httpmime.version>4.5.14</httpmime.version>
        <!-- DropWizard managed END -->

        <!-- DANS libs -->
        <dans-java-utils.version>0.7.0</dans-java-utils.version>
        <dans-dataverse-client-lib.version>0.22.0</dans-dataverse-client-lib.version>

        <!-- DANS APIs -->
        <dd-vault-catalog-api.version>0.1.0</dd-vault-catalog-api.version>
        <dd-validate-dans-bag-api.version>0.3.0</dd-validate-dans-bag-api.version>

        <!-- Database -->
        <postgresql.version>42.4.3</postgresql.version>
        <mysql-connector-java.version>8.0.30</mysql-connector-java.version>
        <hsqldb.version>2.7.1</hsqldb.version>

        <!-- Formats -->
        <bagit.version>5.4.0</bagit.version>
        <zip4j.version>2.11.3</zip4j.version>
        <jgit.version>6.6.1.202309021850-r</jgit.version>
        <tika.version>1.24.1</tika.version>
        <ocfl-java-core.version>1.4.4</ocfl-java-core.version>

        <!-- Apache Commons -->
        <commons-io.version>2.7</commons-io.version>
        <commons-codec.version>1.14</commons-codec.version>
        <commons-lang.version>2.6</commons-lang.version>
        <commons-configuration.version>1.10</commons-configuration.version>
        <commons-csv.version>1.8</commons-csv.version>
        <commons-daemon.version>1.2.2</commons-daemon.version>
        <commons-dbcp2.version>2.7.0</commons-dbcp2.version>
        <commons-compress.version>1.21</commons-compress.version>
        <commons-fileupload.version>1.5</commons-fileupload.version>
        <commons-configuration2.version>2.9.0</commons-configuration2.version>

        <!-- XML -->
        <jaxb-api.version>2.3.1</jaxb-api.version>
        <jaxb-runtime.version>2.3.6</jaxb-runtime.version>
        <jersey-media-jaxb.version>2.35</jersey-media-jaxb.version>

        <!-- Misc utilities -->
        <quartz.version>2.3.2</quartz.version>
        <velocity-engine-core.version>2.3</velocity-engine-core.version>
        <json-path.version>2.8.0</json-path.version>
        <commons-beanutils.version>1.9.4</commons-beanutils.version>
        <jbcrypt.version>0.4</jbcrypt.version>
        <solr-solrj.version>9.0.0</solr-solrj.version>
        <mapstruct.version>1.4.2.Final</mapstruct.version>
        <lombok.version>1.18.24</lombok.version>
        <jsr305.version>3.0.2</jsr305.version>
        <joda-time.version>2.12.5</joda-time.version>

        <!-- Open API -->
        <okhttp.version>4.9.3</okhttp.version>
        <gson-fire.version>1.8.5</gson-fire.version>
        <gson.version>2.9.0</gson.version>
        <swagger-core.version>1.6.5</swagger-core.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!--
                Dependencies imported with DropWizard should not be overridden. We should go with the version of
                each library that DropWizard wants to ensure it works smoothly.
            -->
            <dependency>
                <groupId>io.dropwizard</groupId>
                <artifactId>dropwizard-dependencies</artifactId>
                <version>${dropwizard.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpmime</artifactId>
                 <version>${httpmime.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents.client5</groupId>
                <artifactId>httpclient5</artifactId>
                <version>${httpclient5.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents.core5</groupId>
                <artifactId>httpcore5</artifactId>
                <version>${httpcore5.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.findbugs</groupId>
                <artifactId>jsr305</artifactId>
                <version>${jsr305.version}</version>
            </dependency>
            <!-- DANS libs -->
            <dependency>
                <groupId>nl.knaw.dans</groupId>
                <artifactId>dans-java-utils</artifactId>
                <version>${dans-java-utils.version}</version>
            </dependency>
            <dependency>
                <groupId>nl.knaw.dans</groupId>
                <artifactId>dans-dataverse-client-lib</artifactId>
                <version>${dans-dataverse-client-lib.version}</version>
            </dependency>
            <dependency>
                <groupId>nl.knaw.dans</groupId>
                <artifactId>dd-validate-dans-bag-api</artifactId>
                <version>${dd-validate-dans-bag-api.version}</version>
            </dependency>


            <!-- Database -->
            <dependency>
                <groupId>org.hsqldb</groupId>
                <artifactId>hsqldb</artifactId>
                <version>${hsqldb.version}</version>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql.version}</version>
            </dependency>
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-connector-java.version}</version>
            </dependency>


            <!-- Formats -->
            <dependency>
                <groupId>nl.knaw.dans</groupId>
                <artifactId>bagit</artifactId>
                <version>${bagit.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jgit</groupId>
                <artifactId>org.eclipse.jgit</artifactId>
                <version>${jgit.version}</version>
            </dependency>
            <dependency>
                <groupId>net.lingala.zip4j</groupId>
                <artifactId>zip4j</artifactId>
                <version>${zip4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.tika</groupId>
                <artifactId>tika-core</artifactId>
                <version>${tika.version}</version>
            </dependency>
            <dependency>
                <groupId>edu.wisc.library.ocfl</groupId>
                <artifactId>ocfl-java-core</artifactId>
                <version>${ocfl-java-core.version}</version>
            </dependency>


            <!-- Apache Commons -->
            <dependency>
                <groupId>commons-configuration</groupId>
                <artifactId>commons-configuration</artifactId>
                <version>${commons-configuration.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${commons-codec.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>${commons-lang.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-csv</artifactId>
                <version>${commons-csv.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-daemon</groupId>
                <artifactId>commons-daemon</artifactId>
                <version>${commons-daemon.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-dbcp2</artifactId>
                <version>${commons-dbcp2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-compress</artifactId>
                <version>${commons-compress.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-fileupload</groupId>
                <artifactId>commons-fileupload</artifactId>
                <version>${commons-fileupload.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-configuration2</artifactId>
                <version>${commons-configuration2.version}</version>
            </dependency>

            <!-- XML -->
            <dependency>
                <groupId>javax.xml.bind</groupId>
                <artifactId>jaxb-api</artifactId>
                <version>${jaxb-api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jaxb</groupId>
                <artifactId>jaxb-runtime</artifactId>
                <version>${jaxb-runtime.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.media</groupId>
                <artifactId>jersey-media-jaxb</artifactId>
                <version>${jersey-media-jaxb.version}</version>
            </dependency>

            <!-- Misc utilities -->
            <dependency>
                <groupId>org.quartz-scheduler</groupId>
                <artifactId>quartz</artifactId>
                <version>${quartz.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.velocity</groupId>
                <artifactId>velocity-engine-core</artifactId>
                <version>${velocity-engine-core.version}</version>
            </dependency>
            <dependency>
                <groupId>com.jayway.jsonpath</groupId>
                <artifactId>json-path</artifactId>
                <version>${json-path.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${commons-beanutils.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mindrot</groupId>
                <artifactId>jbcrypt</artifactId>
                <version>${jbcrypt.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.solr</groupId>
                <artifactId>solr-solrj</artifactId>
                <version>${solr-solrj.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${joda-time.version}</version>
            </dependency>


            <!-- Open API -->
            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>okhttp</artifactId>
                <version>${okhttp.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>logging-interceptor</artifactId>
                <version>${okhttp.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>
            <dependency>
                <groupId>io.gsonfire</groupId>
                <artifactId>gson-fire</artifactId>
                <version>${gson-fire.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger-core.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>nl.knaw.dans</groupId>
                <artifactId>dans-build-resources-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <!-- maven-compiler-plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <!-- By default project.build.sourceEncoding is not used by the compiler plug-in, and
                             it defaults to ASCII, which messed up some unit tests that specifically used
                             files with Greek letters in it. -->
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <excludes>
                            <exclude>**/package.html</exclude>
                            <exclude>**/overview.html</exclude>
                        </excludes>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.mapstruct</groupId>
                                <artifactId>mapstruct-processor</artifactId>
                                <version>${mapstruct.version}</version>
                            </path>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${lombok.version}</version>
                            </path>
                            <dependency>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok-mapstruct-binding</artifactId>
                                <version>0.2.0</version>
                            </dependency>
                            <!-- other annotation processors -->
                        </annotationProcessorPaths>
                    </configuration>
                </plugin>
                <!-- maven-source-plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven-source-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>jar-no-fork</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <includePom>true</includePom>
                    </configuration>
                </plugin>
                <!-- maven-jar-plugin -->
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                    <configuration>
                        <archive>
                            <manifest>
                                <addClasspath>true</addClasspath>
                                <classpathPrefix>../lib/</classpathPrefix>
                                <mainClass>${main-class}</mainClass>
                            </manifest>
                            <manifestEntries>
                                <Implementation-Version>${project.version}</Implementation-Version>
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>
                <!-- maven-surefire-plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                </plugin>
                <!-- maven-javadoc-plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${maven-javadoc-plugin.version}</version>
                    <configuration>
                        <encoding>UTF-8</encoding>
                        <linksource>false</linksource>
                        <failOnWarnings>true</failOnWarnings>
                        <bottom><![CDATA[Copyright ${project.inceptionYear}, <a href="http://www.dans.knaw.nl">DANS<a>]]></bottom>
                        <additionalJOptions>
                            <additionalJOption>-J-Xmx1g</additionalJOption>
                            <additionalJOption>-J-Djava.awt.headless=true</additionalJOption>
                            <!--
                            Otherwise JavaDoc will try to group the html files per module and produce dead links starting with 'undefined'.
                            -->
                            <additionalJOption>--no-module-directories</additionalJOption>
                        </additionalJOptions>
                    </configuration>
                </plugin>
                <!-- maven-deploy-plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${maven-deploy-plugin.version}</version>
                </plugin>
                <!-- maven-release-plugin -->
                <plugin>
                    <!--
                    We rely on the maven-deploy-plugin that is included by default.
                    You can use it on its own to deploy a snapshot, but maven-release-plugin
                    also uses it to perform the deploy of the release when calling
                    mvn release:perform.
                    -->
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>${maven-release-plugin.version}</version>
                    <configuration>
                        <tagNameFormat>v@{project.version}</tagNameFormat>
                        <autoVersionSubmodules>true</autoVersionSubmodules>
                        <pushChanges>true</pushChanges>
                    </configuration>
                </plugin>
                <!-- rpm-maven-plugin -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>rpm-maven-plugin</artifactId>
                    <version>${rpm-maven-plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.codehaus.plexus</groupId>
                            <artifactId>plexus-archiver</artifactId>
                            <version>3.7.0</version>
                        </dependency>
                    </dependencies>
                    <configuration>
                        <group>Applications/Archiving</group>
                        <release>${rpm-release}</release>
                        <vendor>${dans-provider-name}</vendor>
                        <packager>${dans-provider-name}</packager>
                        <name>${dans-provider-name}-${project.artifactId}</name>
                        <defaultUsername>root</defaultUsername>
                        <defaultGroupname>root</defaultGroupname>
                        <license>Apache 2.0</license>
                        <targetOS>Linux</targetOS>
                        <defaultFilemode>744</defaultFilemode>
                        <defaultDirmode>755</defaultDirmode>
                        <mappings>
                            <!-- Contents of ${app.home}/lib -->
                            <mapping>
                                <directory>/opt/${dans-provider-name}/${project.artifactId}/lib</directory>
                                <dependency>
                                    <stripVersion>false</stripVersion>
                                </dependency>
                            </mapping>
                            <!-- Read-only contents of ${app.home}/bin  -->
                            <mapping>
                                <directory>/opt/${dans-provider-name}/${project.artifactId}/bin</directory>
                                <sources>
                                    <source>
                                        <location>src/main/assembly/dist/bin</location>
                                        <excludes>
                                            <!-- This is the executable, so exclude here -->
                                            <exclude>${project.artifactId}-${project.version}</exclude>
                                        </excludes>
                                    </source>
                                    <source>
                                        <location>${project.build.directory}/${project.artifactId}-${project.version}.jar</location>
                                    </source>
                                </sources>
                            </mapping>
                            <!-- Executable contents of ${app.home}/bin -->
                            <mapping>
                                <directory>/opt/${dans-provider-name}/${project.artifactId}/bin</directory>
                                <filemode>755</filemode>
                                <sources>
                                    <source>
                                        <location>src/main/assembly/dist/bin/${project.artifactId}</location>
                                    </source>
                                </sources>
                            </mapping>
                            <!-- Contents of cfg dir under /etc/opt ... -->
                            <mapping>
                                <directory>/etc/opt/${dans-provider-name}/${project.artifactId}</directory>
                                <configuration>${rpm-replace-configuration}</configuration>
                                <sources>
                                    <source>
                                        <location>src/main/assembly/dist/cfg</location>
                                    </source>
                                </sources>
                            </mapping>
                            <!-- Contents of ${app.home}/{*-bin/cfg} -->
                            <mapping>
                                <directory>/opt/${dans-provider-name}/${project.artifactId}</directory>
                                <sources>
                                    <source>
                                        <location>src/main/assembly/dist</location>
                                        <excludes>
                                            <exclude>bin/*</exclude>
                                            <exclude>cfg/*</exclude>
                                        </excludes>
                                    </source>
                                </sources>
                            </mapping>
                            <!-- Symlink to executable, to put it on the PATH -->
                            <mapping>
                                <directory>/opt/bin</directory>
                                <sources>
                                    <softlinkSource>
                                        <location>/opt/${dans-provider-name}/${project.artifactId}/bin/${project.artifactId}</location>
                                    </softlinkSource>
                                </sources>
                            </mapping>
                            <!-- Symlink jar to version-less location -->
                            <mapping>
                                <directory>/opt/${dans-provider-name}/${project.artifactId}/bin/</directory>
                                <sources>
                                    <softlinkSource>
                                        <destination>${project.artifactId}.jar</destination>
                                        <location>/opt/${dans-provider-name}/${project.artifactId}/bin/${project.artifactId}-${project.version}.jar</location>
                                    </softlinkSource>
                                </sources>
                            </mapping>
                        </mappings>
                        <defineStatements>
                            <!--
                                To prevent the following problem from occurring:
                                https://github.com/DANS-KNAW/easy-dtap#problem-building-rpm
                                Somehow this macro was not defined on some developers' systems and they had to work around it by
                                defining it in ~/.rpmmacros. This should no longer be necessary.
                            -->
                            <defineStatement>_tmppath %{_topdir}/BUILD</defineStatement>
                        </defineStatements>
                        <!-- Build-time scripts -->
                        <prepareScriptlet>
                            <scriptFile>${rpm-scriptlets-dir}/build-0-prepare.sh</scriptFile>
                            <fileEncoding>UTF-8</fileEncoding>
                        </prepareScriptlet>
                        <installScriptlet>
                            <scriptFile>${rpm-scriptlets-dir}/build-1-install.sh</scriptFile>
                            <fileEncoding>UTF-8</fileEncoding>
                        </installScriptlet>
                        <cleanScriptlet>
                            <!-- NOTE: I have not been able to establish that this script is executed at all -->
                            <scriptFile>${rpm-scriptlets-dir}/build-2-clean.sh</scriptFile>
                            <fileEncoding>UTF-8</fileEncoding>
                        </cleanScriptlet>

                        <!-- Install/erase-time scripts -->
                        <pretransScriptlet>
                            <scriptFile>${rpm-scriptlets-dir}/0-pre-trans.sh</scriptFile>
                            <fileEncoding>UTF-8</fileEncoding>
                        </pretransScriptlet>
                        <preinstallScriptlet>
                            <scriptFile>${rpm-scriptlets-dir}/1-pre-install.sh</scriptFile>
                            <fileEncoding>UTF-8</fileEncoding>
                        </preinstallScriptlet>
                        <postinstallScriptlet>
                            <scriptFile>${rpm-scriptlets-dir}/2-post-install.sh</scriptFile>
                            <fileEncoding>UTF-8</fileEncoding>
                        </postinstallScriptlet>
                        <preremoveScriptlet>
                            <scriptFile>${rpm-scriptlets-dir}/3-pre-remove.sh</scriptFile>
                            <fileEncoding>UTF-8</fileEncoding>
                        </preremoveScriptlet>
                        <postremoveScriptlet>
                            <scriptFile>${rpm-scriptlets-dir}/4-post-remove.sh</scriptFile>
                            <fileEncoding>UTF-8</fileEncoding>
                        </postremoveScriptlet>
                        <posttransScriptlet>
                            <scriptFile>${rpm-scriptlets-dir}/5-post-trans.sh</scriptFile>
                            <fileEncoding>UTF-8</fileEncoding>
                        </posttransScriptlet>
                        <verifyScriptlet>
                            <!-- NOTE: I have not been able to establish that this script is executed at all -->
                            <scriptFile>${rpm-scriptlets-dir}/6-verify.sh</scriptFile>
                            <fileEncoding>UTF-8</fileEncoding>
                        </verifyScriptlet>
                    </configuration>
                    <executions>
                        <execution>
                            <id>attach-rpm</id>
                            <goals>
                                <goal>attached-rpm</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- maven-assembly-plugin -->
                <plugin>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${maven-assembly-plugin.version}</version>
                    <configuration>
                        <appendAssemblyId>false</appendAssemblyId>
                        <descriptors>
                            <descriptor>src/main/assembly/bin.xml</descriptor>
                        </descriptors>
                    </configuration>
                    <executions>
                        <execution>
                            <id>make-assembly</id>
                            <phase>package</phase>
                            <goals>
                                <goal>single</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>nl.knaw.dans</groupId>
                    <artifactId>dans-build-resources-maven-plugin</artifactId>
                    <version>${dans-build-resources-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>get-license-header-template</goal>
                                <goal>generate-rpm-scriptlets</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- license-maven-plugin -->
                <plugin>
                    <groupId>com.mycila</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>${license-maven-plugin.version}</version>
                    <configuration>
                        <!-- Retrieved by dans-build-resources-maven-plugin -->
                        <header>${project.build.directory}/apache2.txt</header>
                        <properties>
                            <owner>DANS - Data Archiving and Networked Services</owner>
                            <email>info@dans.knaw.nl</email>
                        </properties>
                        <excludes>
                            <exclude>.github/**</exclude>
                            <exclude>LICENSE</exclude>
                            <exclude>**/README</exclude>
                            <exclude>**/*.graphml</exclude>
                            <exclude>etc/</exclude>
                            <exclude>data/</exclude>
                            <exclude>data-*/</exclude>
                            <exclude>src/test/resources/**</exclude>
                            <exclude>src/main/resources/**</exclude>
                            <exclude>src/main/assembly/dist/**</exclude>
                            <exclude>*.pyc</exclude>
                            <exclude>docs/</exclude>
                            <exclude>**/pom.xml.versionsBackup</exclude>
                            <exclude>.venv-mkdocs/</exclude>
                        </excludes>
                    </configuration>
                    <executions>
                        <execution>
                            <phase>process-sources</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>


                <!-- dans-nexus-maven-plugin -->
                <plugin>
                    <groupId>nl.knaw.dans</groupId>
                    <artifactId>dans-nexus-maven-plugin</artifactId>
                    <version>${dans-nexus-maven-plugin.version}</version>
                    <configuration>
                        <nexusUserName>${env.NEXUS_USER}</nexusUserName>
                        <nexusPassword>${env.NEXUS_PASSWORD}</nexusPassword>
                        <rpmRepositoryUrl>http://nexus.dans.knaw.nl/repository/rpm-releases</rpmRepositoryUrl>
                        <snapshotRpmRepositoryUrl>http://nexus.dans.knaw.nl/repository/rpm-snapshots</snapshotRpmRepositoryUrl>
                    </configuration>
                    <executions>
                        <execution>
                            <!-- Use default phase: deploy -->
                            <goals>
                                <goal>deploy-rpm</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>${exec-maven-plugin.version}</version>
                    <configuration>
                        <mainClass>${main-class}</mainClass>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.projectlombok</groupId>
                    <artifactId>lombok-maven-plugin</artifactId>
                    <version>${maven-lombok-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>prepare-agent</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>report</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.openapitools</groupId>
                    <artifactId>openapi-generator-maven-plugin</artifactId>
                    <version>${openapi-generator-maven-plugin.version}</version>
                    <configuration>
                        <generateModelTests>false</generateModelTests>
                        <generateApiTests>false</generateApiTests>
                        <modelNameSuffix>Dto</modelNameSuffix>
                        <configOptions>
                            <sourceFolder>src/gen/java/main</sourceFolder>
                            <dateLibrary>java8</dateLibrary>
                            <delegatePattern>true</delegatePattern>
                            <interfaceOnly>true</interfaceOnly>
                            <returnResponse>true</returnResponse>
                            <useSwaggerAnnotations>false</useSwaggerAnnotations>
                        </configOptions>
                    </configuration>
                </plugin>

            </plugins>
        </pluginManagement>
    </build>

    <repositories>
        <repository>
            <id>dans-releases</id>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <url>https://maven.dans.knaw.nl/releases/</url>
        </repository>
        <repository>
            <id>dans-snapshots</id>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <url>https://maven.dans.knaw.nl/snapshots/</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>dans-releases</id>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <url>https://maven.dans.knaw.nl/releases/</url>
        </pluginRepository>
        <pluginRepository>
            <id>dans-snapshots</id>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <url>https://maven.dans.knaw.nl/snapshots/</url>
        </pluginRepository>
    </pluginRepositories>

    <distributionManagement>
        <!-- Credentials for server are defined in ~/.m2/settings.xml -->
        <snapshotRepository>
            <id>nexus-snapshots</id>
            <!-- Final slash is important for Nexus ! -->
            <url>https://maven.dans.knaw.nl/snapshots/</url>
        </snapshotRepository>
        <repository>
            <id>nexus-releases</id>
            <!-- Final slash is important for Nexus ! -->
            <url>https://maven.dans.knaw.nl/releases/</url>
        </repository>
    </distributionManagement>

</project>
